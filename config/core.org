#+TITLE: core.org
#+PROPERTY: header-args:emacs-lisp :tangle yes :results silent

* Rendimiento y limpieza
#+begin_src emacs-lisp
(use-package gcmh
  :hook (after-init . gcmh-mode)
  :init
  (setq gcmh-high-cons-threshold (* 64 1024 1024)
        gcmh-idle-delay 0.5
        gcmh-verbose nil))

(use-package no-littering
  :init
  (setq no-littering-etc-directory (expand-file-name "etc/" user-emacs-directory)
        no-littering-var-directory (expand-file-name "var/" user-emacs-directory)))

;; Aviso por archivo grande: subilo a 100MB (y podés elegir visitarlo "literal")
(setq large-file-warning-threshold (* 100 1024 1024))

;; Líneas MUY largas (campos monstruosos en CSV): mitigación oficial
(when (fboundp 'global-so-long-mode)
  (global-so-long-mode 1))
#+end_src

* Autosaves fuera del repo
#+begin_src emacs-lisp
;; Enviá los #archivo# y la lista de autosaves a ~/.emacs.d/var/
(let ((as-dir   (expand-file-name "var/auto-save/"       user-emacs-directory))
      (list-dir (expand-file-name "var/auto-save-list/"  user-emacs-directory)))
  (make-directory as-dir t)
  (make-directory list-dir t)
  (setq auto-save-file-name-transforms `((".*" ,as-dir t))
        auto-save-list-file-prefix (expand-file-name ".saves-" list-dir)))
#+end_src

* Historial y archivos recientes
#+begin_src emacs-lisp
;; Carpeta var centralizada
(defvar jinxx-var-dir (expand-file-name "var/" user-emacs-directory))
(unless (file-directory-p jinxx-var-dir)
  (make-directory jinxx-var-dir t))

;; Historial de posiciones
(setq save-place-file (expand-file-name "places" jinxx-var-dir))
(save-place-mode 1)

;; Historial de minibuffer/kill-ring
(setq savehist-file (expand-file-name "savehist" jinxx-var-dir)
      history-length 500
      savehist-additional-variables '(search-ring regexp-search-ring kill-ring))
(savehist-mode 1)

;; Archivos recientes
(setq recentf-save-file (expand-file-name "recentf" jinxx-var-dir)
      recentf-max-saved-items 300
      recentf-auto-cleanup 'never
      recentf-exclude '("^/tmp/" "/TAGS\\'" "bookmarks\\'" "\\.gz\\'" "/var/folders/"))
(recentf-mode 1)

;; Bookmarks explícitos
(setq bookmark-default-file (expand-file-name "bookmarks" jinxx-var-dir)
      bookmark-save-flag 1)

#+end_src

* Comportamiento general recomendado
#+begin_src emacs-lisp
(setq require-final-newline t
      use-short-answers   t
      create-lockfiles    nil
      make-backup-files   t
      version-control     t
      delete-old-versions t
      kept-new-versions   6
      kept-old-versions   2)

(global-auto-revert-mode 1)
(electric-pair-mode 1)
#+end_src

* Codificación UTF-8 global
#+begin_src emacs-lisp
(prefer-coding-system        'utf-8)
(set-default-coding-systems  'utf-8)
(set-terminal-coding-system  'utf-8)
(set-keyboard-coding-system  'utf-8)
(setq locale-coding-system   'utf-8)
#+end_src

* Confirmación de carga
#+begin_src emacs-lisp
(message "core.org cargado correctamente")
#+end_src

